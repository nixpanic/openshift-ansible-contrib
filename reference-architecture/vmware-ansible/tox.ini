# If "pip" is not installed, install it running following command:
#   $ yum install python-pip
#
# If "tox" is not installed, install it running following command:
#   $ pip install -e git://github.com/tox-dev/tox.git@2.9.1#egg=tox
#
# After it you can use "tox" command. For example:
#   $ tox -e ocp3.7 -- python ocp-on-vmware.py --create_inventory

[tox]
# With version 1.6.0 'skipsdist' config option was added. It allows to skip
# installation of current project to 'sdist' (no req to define setup.py file).
minversion = 1.6.0
skipsdist = True
sitepackages = False
envlist = readme

# Versions of 'cryptography' newer than 2.0.3 fail to be installed with default
# 'setuptools' in RHEL7. Where default version is very old (July 2013).
# In case it is required to install newer version, then do following:
# {envdir}/bin/pip install --upgrade setuptools
# {envdir}/bin/pip install cffi
# {envdir}/bin/pip install --upgrade cryptography
#
# So, working combinations for RHEL7 are following:
#    setuptools>=v38.4.0
#    cryptography
# and
#    setuptools
#    cryptography<=2.0.3
#
# 'Jinja2' should be newer than or equal to 2.8 when we generate config file
# for tests.
[base]
deps =
    setuptools
    cryptography<=2.0.3
    pyyaml
    dnspython
    ipaddress
    ipaddr
    iptools
    netaddr
    pyvmomi
    click
    ldap
    pyOpenSSL
    passlib
    Jinja2>=2.8

[testenv]
basepython = python2.7
envdir = {toxworkdir}/{envname}
setenv =
    OADIR={envdir}/usr/share/ansible/openshift-ansible
    ANSIBLE_ROLES_PATH={env:OADIR}/roles:{toxinidir}/../../roles
    ANSIBLE_LOG_PATH={toxinidir}/ansible_{envname}.log
    ANSIBLE_CALLBACK_PLUGINS={env:OADIR}/callback_plugins
    ANSIBLE_FILTER_PLUGINS={env:OADIR}/filter_plugins
    ANSIBLE_LOOKUP_PLUGINS={env:OADIR}/lookup_plugins
    ANSIBLE_LIBRARY={env:OADIR}/roles/etcd_common/library:{env:OADIR}/roles/lib_openshift/library:{env:OADIR}/roles/lib_utils/library:{env:OADIR}/roles/openshift_certificate_expiry/library:{env:OADIR}/roles/openshift_cli/library:{env:OADIR}/roles/openshift_facts/library:{env:OADIR}/roles/openshift_health_checker/library:{env:OADIR}/roles/openshift_logging/library:{env:OADIR}/roles/os_firewall/library:{env:OADIR}/library:{env:OADIR}/roles/etcd/library:{env:OADIR}/roles/lib_os_firewall/library:{env:OADIR}/roles/openshift_sanitize_inventory/library:{envdir}/src/yedit/roles/lib_yaml_editor/library
    ANSIBLE_INVENTORY={toxinidir}/inventory/vsphere/vms/vmware_inventory.py
whitelist_externals = *
commands =
    {envdir}/bin/pip install \
        -v -e "git://github.com/ansible/ansible.git@v2.4.3.0-1#egg=ansible"
    yum install git libselinux-python
    mkdir -p {envdir}/lib/python2.7/site-packages
    ln -s -f /usr/lib64/python2.7/site-packages/selinux \
        {envdir}/lib/python2.7/site-packages/selinux
    find . -type f -name "*.py[c|o]" -delete
    {toxinidir}/scripts/install_openshift_ansible.sh \
        {envdir} {env:OPENSHIFT_ANSIBLE_GIT_TAG}
    {toxinidir}/scripts/install_yedit_for_ansible.sh {envdir} master
    {posargs:echo 'No commands have been specified. Exiting.'}

[testenv:readme]
commands =
    echo -e 'To create environment for installation of '\
            'OpenShift (OCP) 3.9 run following command:\n\n'\
            '  $ tox -e ocp3.9\n\n'\
            'or for version 3.7 run following command:\n\n'\
            '  $ tox -e ocp3.7\n\n'\
            'or for version 3.6 run following:\n\n'\
            '  $ tox -e ocp3.6\n'

[testenv:ocp3.6]
deps = {[base]deps}
setenv =
    {[testenv]setenv}
    OPENSHIFT_ANSIBLE_GIT_TAG='openshift-ansible-3.6.173.0.105-1'

[testenv:ocp3.7]
deps = {[base]deps}
setenv =
    {[testenv]setenv}
    OPENSHIFT_ANSIBLE_GIT_TAG='openshift-ansible-3.7.38-1'

[testenv:ocp3.9]
deps = {[base]deps}
setenv =
    {[testenv]setenv}
    OPENSHIFT_ANSIBLE_GIT_TAG='openshift-ansible-3.9.11-1'
