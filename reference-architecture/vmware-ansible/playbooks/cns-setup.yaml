---
- hosts: cns
  tasks:
  - name: Install required kernel modules on CNS nodes
    import_role:
      name: openshift_storage_glusterfs
      tasks_from: kernel_modules.yml

- hosts: single_master
  tasks:
  - name: Perform actions on master node which are required to install CNS 
    import_role:
      name: openshift_storage_glusterfs
    vars:
      openshift_storage_glusterfs_name: 'cns'
      openshift_storage_glusterfs_namespace: 'cns'
      openshift_storage_glusterfs_is_native: true
      openshift_storage_glusterfs_storageclass: true
      openshift_storage_glusterfs_version: 'latest'
      openshift_storage_glusterfs_block_version: 'latest'
      openshift_storage_glusterfs_block_host_vol_size: "{{
          container_storage_disks.split(',') | map('int') | list | max }}"
      openshift_storage_glusterfs_s3_deploy: false
      openshift_storage_glusterfs_heketi_version: 'latest'
      openshift_storage_glusterfs_heketi_admin_key: "{{
          (heketi_admin_key.strip() != '') |
              ternary(heketi_admin_key.strip(), omit) }}"
      openshift_storage_glusterfs_heketi_user_key: "{{
          (heketi_user_key.strip() != '') |
              ternary(heketi_user_key.strip(), omit) }}"
      openshift_storage_glusterfs_heketi_topology_load: true

- name: Get IP address of the node with router
  hosts: single_master
  tasks:
  - command: "oc get endpoints router -o=custom-columns=:.subsets[*].addresses[0].ip"
    register: router_get
  - set_fact:
      router_ip: "{{ router_get.stdout_lines[1].strip() }}"

- name: Update dnsmasq config with custom domain zone for apps
  hosts: master
  tasks:
  - lineinfile:
      path: /etc/dnsmasq.conf
      line: "address=/.{{ app_dns_prefix }}.{{ dns_zone }}/{{ router_ip }}"
  - service:
      name: dnsmasq
      state: restarted

# Following updates config file
# which is required for automated tests from 'cns-automation' repo
# TODO(vponomar): add support for autogenerated heketi secrets

- name: Update 'cns-automation' config file
  hosts: localhost
  tasks:
  - yedit:
      src: "{{ cns_automation_config_file_path }}"
      state: present
      edits:
      - key: cns.setup.routing_config
        value: "{{ app_dns_prefix }}.{{ dns_zone }}"
      - key: cns.setup.cns_project_name
        value: 'cns'
      - key: cns.setup.cns_username
        # NOTE(vponomar): Following user just should have enough rights
        # for creation of storage classses and secrets.
        value: "system:admin"
      - key: cns.setup.cns_password
        # NOTE(vponomar): by default it is empty for 'system:admin' user,
        # update it in case it is changed during deployment.
        value: ""
      - key: cns.deployment_type
        value: 'cns'
      - key: cns.heketi_config.heketi_server_url
        value: "http://heketi-cns-cns.{{ app_dns_prefix }}.{{ dns_zone }}"
      - key: cns.heketi_config.heketi_cli_user
        value: 'admin'
      - key: cns.heketi_config.heketi_cli_key
        value: "{{ heketi_admin_key }}"
      - key: cns.heketi_volume.name
        value: "{{ 'volume_for_testing_size_extending' +
                   (999999999999999 | random | to_uuid) }}"
      - key: cns.heketi_volume.size
        value: 1
      - key: cns.heketi_volume.expand_size
        value: 2
      - key: cns.dynamic_provisioning.storage_classes
        value:
          storage_class1:
            name:  "{{ 'sc-glusterfs' + (999999999999999 | random | to_uuid) }}"
            provisioner: "kubernetes.io/glusterfs"
            resturl: "http://heketi-cns-cns.{{ app_dns_prefix }}.{{ dns_zone }}"
            restuser: "admin"
            secretnamespace: "cns" 
            secretname: "{{ 'heketi-secret-for-glusterfs-sc' +
                            (999999999999999 | random | to_uuid) }}"
          storage_class2:
            name:  "{{ 'sc-glusterblock' + (999999999999999 | random | to_uuid) }}"
            provisioner: "gluster.org/glusterblock"
            resturl: "http://heketi-cns-cns.{{ app_dns_prefix }}.{{ dns_zone }}"
            auth: True
            restuser: "admin"
            restsecretnamespace: "cns"
            restsecretname: "{{ 'heketi-secret-for-glusterblock-sc' +
                                (999999999999999 | random | to_uuid)}}"
            hacount: "3"
            chapauthenabled: "true"
      - key: cns.dynamic_provisioning.secrets
        value:
          secret1:
            secret_name: "{{ 'heketi-secret-for-glusterfs-sc' +
                             (999999999999999 | random | to_uuid) }}"
            namespace: "cns"
            type: "kubernetes.io/glusterfs"
          secret2:
            secret_name: "{{ 'heketi-secret-for-glusterblock-sc' +
                             (999999999999999 | random | to_uuid) }}"
            namespace: "cns"
            type: "gluster.org/glusterblock"
    when: cns_automation_config_file_path | length > 0
    run_once: true
