---
- include: "{{ (openshift_vers in ['v3_6', 'v3_7']) | ternary(
      'noop.yaml',
      lookup('env', 'VIRTUAL_ENV') +
          '/usr/share/ansible/openshift-ansible/playbooks/init/main.yml'
  ) }} hosts=single_master"
  when: openshift_vers not in ['v3_6', 'v3_7']

- hosts: single_master
  tasks:
  - name: Enable Gluster 3 repo
    import_role:
      name: enable-gluster-repo
  - name: Install and run heketi
    import_role:
      name: heketi-install
  - name: Perform actions on master node which are required to install CRS 
    import_role:
      name: openshift_storage_glusterfs
    vars:
      openshift_storage_glusterfs_name: 'crs'
      openshift_storage_glusterfs_namespace: 'crs'
      openshift_storage_glusterfs_is_native: false
      openshift_storage_glusterfs_heketi_is_native: false
      openshift_storage_glusterfs_heketi_url: "{{ ansible_default_ipv4.address }}"
      openshift_storage_glusterfs_heketi_admin_key: "{{
          (dp_tool_heketi_admin_key.strip() != '') |
              ternary(dp_tool_heketi_admin_key.strip(), omit) }}"
      openshift_storage_glusterfs_heketi_user_key: "{{
          (dp_tool_heketi_user_key.strip() != '') |
              ternary(dp_tool_heketi_user_key.strip(), omit) }}"
      openshift_storage_glusterfs_storageclass: true
      openshift_storage_glusterfs_block_storageclass: true
      openshift_storage_glusterfs_s3_deploy: false
      openshift_storage_glusterfs_heketi_executor: ssh
  - name: Allow to expand PVCs using 'glusterfs' storageclass.
    oc_edit:
      kind: sc
      name: glusterfs-{{ glusterfs_name }}
      content:
        allowVolumeExpansion: true

- name: Restart dnsmasq on all the nodes to apply all the changes we made
  hosts: allnodes
  tasks:
  - service:
      name: dnsmasq
      state: restarted

- name: Get IPv4 address of the main master node
  hosts: single_master
  tasks:
  - command: "python -c \"import yaml ;
        config = yaml.load(open('/etc/origin/master/master-config.yaml', 'r'));
        print(config['kubernetesMasterConfig']['masterIP'])
    \""
    register: master_ipv4
  - set_fact:
      master_ipv4: "{{ master_ipv4.stdout_lines[0] }}"

# Following updates config file
# which is required for automated tests from 'cns-automation' repo

- name: Update 'cns-automation' config file
  hosts: localhost
  tasks:
  - set_fact:
      master_ipv4: "{{ hostvars[groups['single_master'][0]].master_ipv4 }}"
  - yedit:
      src: "{{ cns_automation_config_file_path }}"
      state: present
      edits:
      - key: cns.setup.routing_config
        value: "{{ app_dns_prefix }}.{{ dns_zone }}"
      - key: cns.setup.cns_project_name
        value: 'crs'
      - key: cns.setup.cns_username
        # NOTE(vponomar): Following user just should have enough rights
        # for creation of storage classses and secrets.
        value: "system:admin"
      - key: cns.setup.cns_password
        # NOTE(vponomar): by default it is empty for 'system:admin' user,
        # update it in case it is changed during deployment.
        value: ""
      - key: cns.deployment_type
        value: 'crs'
      - key: cns.heketi_config.heketi_dc_name
        value: "not-applicable-for-crs"
      - key: cns.heketi_config.heketi_service_name
        value: "not-applicable-for-crs"
      - key: cns.heketi_config.heketi_client_node
        value: "{{ master_ipv4 }}"
      - key: cns.heketi_config.heketi_server_url
        value: "http://{{ master_ipv4 }}:8080"
      - key: cns.heketi_config.heketi_cli_user
        value: 'admin'
      - key: cns.heketi_config.heketi_cli_key
        value: "{{ dp_tool_heketi_admin_key }}"
      - key: cns.heketi_volume.name
        value: "{{ 'volume_for_testing_size_extending' +
                   (999999999999999 | random | to_uuid) }}"
      - key: cns.heketi_volume.size
        value: 1
      - key: cns.heketi_volume.expand_size
        value: 2
      - key: cns.dynamic_provisioning.storage_classes
        value:
          file_storage_class:
            provisioner: "kubernetes.io/glusterfs"
            resturl: "http://{{ master_ipv4 }}:8080"
            restuser: "admin"
            secretnamespace: "crs" 
            volumenameprefix: "crs-vol"
          block_storage_class:
            provisioner: "gluster.org/glusterblock"
            resturl: "http://{{ master_ipv4 }}:8080"
            restuser: "admin"
            restsecretnamespace: "crs"
            volumenameprefix: "crs-vol"
            auth: True
            hacount: "3"
            chapauthenabled: "true"
    when: cns_automation_config_file_path | length > 0
    run_once: true
